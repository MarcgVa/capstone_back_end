// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  output          = "../generated/prisma"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//models//

// Models //
model User {
  id       String   @id @default(uuid())
  email    String   @unique
  password String
  role     Role     @default(USER)
  account  Account?
  tasks    Tasks[]
}

model Account {
  id        Int        @id @default(autoincrement())
  user      User       @relation(fields: [accountId], references: [id])
  accountId String     @unique
  firstName String
  lastName  String
  address   String     @db.VarChar(100)
  city      String
  state     String
  zip       Int
  phone     String     @unique
  startDate DateTime?
  cutDate   DateTime?
  bill      Billing[]
  invoice   Invoice[]
  Services  Services[]

  @@unique([firstName, lastName, phone])
}

model ServicePlan {
  servicePlanId String     @id @default(uuid())
  accountId     String?    @unique
  title         String     @unique
  description   String     @db.VarChar(255)
  cost          Float
  cycle         Int
  services      Services[]
}

model Services {
  id        String      @id @default(uuid())
  account   Account     @relation(fields: [accountId], references: [accountId])
  accountId String
  service   ServicePlan @relation(fields: [serviceId], references: [servicePlanId])
  serviceId String
}

model Tasks {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(50)
  description String?  @db.VarChar(255)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  completed   Boolean  @default(false)
  dueDate     DateTime
  assignedTo  String?
  assignee    User     @relation(fields: [createdBy], references: [id])
  createdBy   String
  updatedBy   Json?
}

model Consultations {
  id          Int      @id @default(autoincrement())
  name        String
  address     String
  phone       String
  email       String   @unique
  requestDate DateTime
  completed   Boolean  @default(false)
}

model Billing {
  id        Int      @id @default(autoincrement())
  account   Account  @relation(fields: [billToId], references: [accountId])
  billToId  String
  startDate DateTime
  endDate   DateTime
  billCycle String
  amount    Float
}

model Invoice {
  invoiceId String  @id @default(uuid())
  account   Account @relation(fields: [accountId], references: [accountId])
  accountId String
  invoice   String  @db.Xml
}

enum Role {
  USER
  ADMIN
  MANAGER
  TECH
}
